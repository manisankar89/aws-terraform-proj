pipeline {
  agent any

  environment {
    AWS_DEFAULT_REGION = 'ap-south-1'
  }

  stages {
    stage('Checkout Source') {
      steps {
        // Add credentials if repo is private, e.g., credentialsId: 'your-github-credentials-id'
        git branch: 'main', url: 'https://github.com/manisankar89/aws-terraform-proj/main.tf'
      }
    }

    stage('Terraform Init') {
      steps {
        withCredentials([
          [
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws-creds'
          ]
        ]) {
          sh 'terraform init'
        }
      }
    }

    stage('Terraform Format & Validate') {
      steps {
        sh 'terraform fmt -check'
        sh 'terraform validate'
      }
    }

    stage('Terraform Plan') {
      steps {
        withCredentials([
          [
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws-creds'
          ]
        ]) {
          sh 'terraform plan -out=tfplan'
        }
      }
    }

    stage('Terraform Apply') {
      steps {
        input message: 'Proceed with Terraform Apply?', ok: 'Apply'
        withCredentials([
          [
            $class: 'AmazonWebServicesCredentialsBinding',
            credentialsId: 'aws-creds'
          ]
        ]) {
          sh 'terraform apply -auto-approve tfplan'
        }
      }
    }
  }

  post {
    always {
      archiveArtifacts artifacts: '*.tf'
      cleanWs()
    }
  }
}
